(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{49:function(e,t,a){e.exports=a.p+"assets/img/playground3.ae446b93.png"},50:function(e,t,a){e.exports=a.p+"assets/img/playground2.a1940941.png"},51:function(e,t,a){e.exports=a.p+"assets/img/playground1.de0d0870.png"},52:function(e,t,a){e.exports=a.p+"assets/img/bg.b0a66aa1.jpg"},54:function(e,t,a){e.exports=a.p+"assets/img/particle_build.72e09ea4.png"},72:function(e,t,a){"use strict";a.r(t);var o=[function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"content"},[o("h1",{attrs:{id:"mini-workshop-3-ðŸ“±-build-mobile-app-that-shouts-rainbows-with-a-particle-photon-device"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#mini-workshop-3-ðŸ“±-build-mobile-app-that-shouts-rainbows-with-a-particle-photon-device","aria-hidden":"true"}},[e._v("#")]),e._v(" Mini Workshop 3: ðŸ“± Build Mobile App that Shouts Rainbows with a Particle Photon Device")]),o("table",[o("thead",[o("tr",[o("th",[o("strong",[e._v("Project Goal")])]),o("th",[e._v("Build a NativeScript-Vue mobile app to make a Photon shout rainbows")])])]),o("tbody",[o("tr",[o("td",[o("strong",[e._v("What youâ€™ll learn")])]),o("td",[e._v("How to build a mobile app with NativeScript and Vue.js, how to setup and configure a Particle Photon, and how to connect the two so the app controls the device.")])]),o("tr",[o("td",[o("strong",[e._v("Tools youâ€™ll need")])]),o("td",[e._v("Access to Wifi"),o("br"),o("br"),e._v("A modern browser like Chrome."),o("br"),o("br"),e._v("Access to the "),o("a",{attrs:{href:"http://play.nativescript.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("NativeScript Playground")]),e._v(" - consider creating an account in the Playground to keep the versions of your work intact. A mobile phone (iOS or Android) with the NativeScript Playground and Preview apps installed."),o("br"),o("br"),e._v("The two NativeScript companion apps for the playground (NativeScript Viewer and NativeScript Playground. On Android: "),o("a",{attrs:{href:"https://play.google.com/store/apps/details?id=org.nativescript.play",target:"_blank",rel:"noopener noreferrer"}},[e._v("NativeScript Playground")]),e._v(" and "),o("a",{attrs:{href:"https://play.google.com/store/apps/details?id=org.nativescript.preview",target:"_blank",rel:"noopener noreferrer"}},[e._v("NativeScript Preview")]),e._v(". On iOS: "),o("a",{attrs:{href:"https://itunes.apple.com/us/app/nativescript-playground/id1263543946",target:"_blank",rel:"noopener noreferrer"}},[e._v("NativeScript Playground")]),e._v(" and "),o("a",{attrs:{href:"https://itunes.apple.com/us/app/nativescript-preview/id1264484702",target:"_blank",rel:"noopener noreferrer"}},[e._v("NativeScript Preview")]),o("br"),o("br"),e._v("A "),o("a",{attrs:{href:"https://store.particle.io/collections/photon",target:"_blank",rel:"noopener noreferrer"}},[e._v("Particle Photon device")]),e._v(".")])]),o("tr",[o("td",[o("strong",[e._v("Time needed to complete")])]),o("td",[e._v("60 minutes")])])])]),o("h1",{attrs:{id:"instructions"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#instructions","aria-hidden":"true"}},[e._v("#")]),e._v(" Instructions")]),o("h2",{attrs:{id:"set-up-your-photon"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#set-up-your-photon","aria-hidden":"true"}},[e._v("#")]),e._v(" Set up your Photon")]),o("p",[e._v("Unbox the kit that comes with this workshop or use your own device, plug the mini-USB cord into the Photon and to a USB port on your computer. Visit the Photon "),o("a",{attrs:{href:"https://setup.particle.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("setup")]),e._v(" page to set up your device. Click 'Setup a Photon' and 'next' to begin. If you have all the requirements on the next page, click 'next'. Download the local file that is generated to your computer. Open the photonsetup.html file in a browser.")]),o("p",[e._v("Follow the steps listed to connect to the Photon's wifi network. When it connects, it should 'breathe cyan' (the blue light in the center should pulse gently on and off).")]),o("p",[e._v("Next, click 'name your device' and give it a name. Next, you can create an account on for Particle Build, the Photon's special IDE where you keep its code.")]),o("p",[e._v("Create an account "),o("a",{attrs:{href:"https://login.particle.io/login",target:"_blank",rel:"noopener noreferrer"}},[e._v("here")]),e._v(" and then go to "),o("a",{attrs:{href:"https://build.particle.io/build/new",target:"_blank",rel:"noopener noreferrer"}},[e._v("Particle Build")]),e._v(". Click on the third icon from the bottom to see your device listed. Make sure that it is starred - you are going to flash code to this device over wifi.")]),o("p",[o("img",{attrs:{src:a(54),alt:"Particle Build"}})]),o("h2",{attrs:{id:"scaffold-your-app"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#scaffold-your-app","aria-hidden":"true"}},[e._v("#")]),e._v(" Scaffold your app")]),o("p",[e._v("Open the "),o("a",{attrs:{href:"http://play.nativescript.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("NativeScript Playground")]),e._v(" and take a look around. On your first visit, you'll see several 'coach marks' showing where key functionality is kept.")]),o("p",[o("img",{attrs:{src:a(51),alt:"coach marks in the playground"}})]),o("p",[e._v("Click 'Play Now' to open the main editor. You'll see a QR code appear - scan that with the NativeScript Play app. This allows your phone to refresh automatically as you code. Now you're ready to scaffold a NativeScript-Vue app!")]),o("p",[e._v("By default, the first playground app is created using Angular. Click 'new' at the top and choose 'NS-Vue' as a template. You'll get another QR code, so scan that one. You'll see your phone refresh and a basic app appear:")]),o("p",[o("img",{attrs:{src:a(50),alt:"base app"}})]),o("h2",{attrs:{id:"add-some-styles"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#add-some-styles","aria-hidden":"true"}},[e._v("#")]),e._v(" Add some Styles")]),o("p",[e._v("Now we're going to style the app's interface and build its UI. It's going to have an ActionBar, a card, and a button.")]),o("p",[e._v("We're going to add an image to a new "),o("code",[e._v("/images")]),e._v(" folder for the app's background. Click the '+' button in the top panel and create a new folder called images. Download the file below to your local computer. Click the '+' button again and then 'upload resources' to browse and add this file ("),o("code",[e._v("bg.jpg")]),e._v(") in that folder. Make sure to save your file.")]),o("p",[o("img",{attrs:{src:a(52),alt:"background"}})]),o("p",[e._v("Next, open the app.css file in the app root. Overwrite the file with these styles:")]),o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('Page {\n    background-image: url("~/images/bg.jpg");\n}\n\n.action-bar {\n    background-color: #32292f;\n    color: #f0f7f4;\n    font-size: 20px;\n}\n.btn {\n    background-color: #70abaf;\n    color: white;\n    padding: 10px;\n    margin: 20px;\n    font-size: 30px;\n    border-radius: 5px;\n}\n.card{\n    vertical-align: top;\n    margin: 15;\n    padding: 15;\n    border-radius: 5;\n    background-color: #99e1d9;\n}\n\n.placeholder{\n    height: 100%;\n}\n')])]),o("p",[e._v("As your app refreshes, you'll see that the UI shows some promise, but looks a little strange. Let's fix the UI.")]),o("h2",{attrs:{id:"fix-the-ui"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#fix-the-ui","aria-hidden":"true"}},[e._v("#")]),e._v(" Fix the UI")]),o("p",[e._v("Let's fix the ActionBar: In app.js, take a look at the template block. Add a title to ActionBar, something like this: "),o("code",[e._v('<ActionBar title="So. Many. Dogs!" class="action-bar" />')]),e._v(".")]),o("p",[e._v("Next, add a StackLayout to replace the current scrollview. Under the ActionBar, and above the closing "),o("code",[e._v("</Page>")]),e._v(" tag, add a layout with a button:")]),o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('<StackLayout class="card">\n    <Button class="btn" @tap="getADog">Find Me A Dog!</button>\n          \n</StackLayout>\n')])]),o("p",[e._v("Now, you should see a nice looking green card with a darker green button.")]),o("div",{staticClass:"tip custom-block"},[o("p",{staticClass:"custom-block-title"},[e._v("ðŸ’¡")]),o("p",[e._v("NativeScript layouts differ from the html you write on the web. You're using NativeScript XML markup, which translates to native UI like GridLayouts and StackLayouts.")])]),o("h2",{attrs:{id:"add-some-data"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#add-some-data","aria-hidden":"true"}},[e._v("#")]),e._v(" Add Some Data")]),o("p",[e._v("At this point, we need to start populating our UI with some data. To make external http calls, we need to leverage the http module, so add this line at the top, under "),o("code",[e._v("const Vue...")]),e._v(":")]),o("p",[o("code",[e._v('const http = require("http");')])]),o("p",[e._v("Then, under the "),o("code",[e._v("new Vue({")]),e._v(" open tag, and above the template, add a "),o("code",[e._v("data")]),e._v(" placeholder for a dog image that will be populated shortly by data from the Dog CEO API.")]),o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("data() {\n    return {\n      dogImage: {}\n    }\n  },\n")])]),o("p",[e._v("Finally, create a space for the image to populate. Under the Button tag, add this block:")]),o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v(' <StackLayout class="placeholder">\n      <Image :src="dogImage.message" />\n </StackLayout>\n')])]),o("div",{staticClass:"tip custom-block"},[o("p",{staticClass:"custom-block-title"},[e._v("ðŸ’¡")]),o("p",[e._v('Note, if at any time your app stops refreshing on your device, try rescanning the QR code by pressing the "Preview" button. Watch for errors in the console of the Playground.')])]),o("h2",{attrs:{id:"make-the-call"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#make-the-call","aria-hidden":"true"}},[e._v("#")]),e._v(" Make the Call")]),o("p",[e._v("The last thing we have to do is add a method to call the Dog CEO API so we can populate our card with data when we press the button. We're going to query this API for random data.")]),o("p",[e._v("Add this block under the final comma of the "),o("code",[e._v("template")]),e._v(" block:")]),o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('methods: {\n    getADog() {\n      http.request({ url: "https://dog.ceo/api/breeds/image/random", method: "GET" }).then((response) => {\n        this.dogImage = JSON.parse(response.content)\n        console.log(this.dogImage.message)\n      }, (e) => {\n        alert("error")\n      });\n    }\n\n  }\n')])]),o("p",[e._v("Try pressing the button and seeing if dogs appear. Cute, right? Check the console to see if the dog image urls are being logged, if you encounter any difficulty.")]),o("p",[e._v("The entire code of your app.js file should look like this:")]),o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('const Vue = require("nativescript-vue");\nconst http = require("http");\n\nnew Vue({\n  data() {\n    return {\n      dogImage: {}\n    }\n  },\n  template: `\n    <Page class="page">\n      <ActionBar title="So. Many. Dogs!" class="action-bar" />\n      <StackLayout class="card">\n        <Button class="btn" @tap="getADog">Find Me A Dog!</button>\n           <StackLayout class="placeholder">\n            <Image :src="dogImage.message" />\n          </StackLayout>\n        </StackLayout>\n    </Page>\n  `,\n  methods: {\n    getADog() {\n      http.request({ url: "https://dog.ceo/api/breeds/image/random", method: "GET" }).then((response) => {\n        this.dogImage = JSON.parse(response.content)\n        console.log(this.dogImage.message)\n      }, (e) => {\n        alert("error")\n      });\n    }\n\n  }\n}).$start();\n')])]),o("p",[e._v("The final app looks like this:")]),o("p",[o("img",{attrs:{src:a(49),alt:"final app"}})]),o("p",[e._v("It's really interesting to build Vue.js apps for mobile devices in the NativeScript playground. Now that you know how, what else can you build?")])])}],r=a(0),n=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},o,!1,null,null,null);t.default=n.exports}}]);